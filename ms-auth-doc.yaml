swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8081
basePath: /
tags:
  - name: Person Controller
    description: Email Validation Controller
  - name: basic-error-controller
    description: Basic Error Controller
paths:
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /v1/email-validation/change-email/request:
    post:
      tags:
        - Person Controller
      summary: Creates a new email change request
      operationId: createEmailChangeRequestUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: createEmailChangeRequestForm
          description: createEmailChangeRequestForm
          required: true
          schema:
            $ref: '#/definitions/CreateEmailChangeRequestForm'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v1/email-validation/change-password/request:
    post:
      tags:
        - Person Controller
      summary: Creates a new password change request
      operationId: createPasswordChangeRequestUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: passwordChangeRequestForm
          description: passwordChangeRequestForm
          required: true
          schema:
            $ref: '#/definitions/CreatePasswordChangeRequestForm'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v1/email-validation/person-creation/{validationUuid}:
    patch:
      tags:
        - Person Controller
      summary: Validate the person's email when a it just got created
      operationId: validatePersonCreationEmailValidationUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: validationUuid
          in: path
          description: validationUuid
          required: true
          type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /v1/email-validation/{validationUuid}:
    get:
      tags:
        - Person Controller
      summary: Validate if the email validation request exists
      operationId: checkIfEmailValidationExistsAndNotValidatedUsingGET
      produces:
        - '*/*'
      parameters:
        - name: validationUuid
          in: path
          description: validationUuid
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v1/person:
    get:
      tags:
        - Person Controller
      summary: Get the information of the authenticated person
      operationId: getAuthenticatedPersonInformationUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PersonWithRolesResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - Person Controller
      summary: Creates a new person
      operationId: createUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: form
          description: form
          required: true
          schema:
            $ref: '#/definitions/CreatePersonRequest'
        - name: role
          in: header
          description: role
          required: true
          type: string
          enum:
            - CONTRACTOR
            - MUSICIAN
            - BAND
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v1/person/add-service/{serviceUuid}/{serviceType}:
    post:
      tags:
        - Person Controller
      summary: Add the given service to the authenticated person
      operationId: addServiceToPersonUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: serviceType
          in: path
          description: serviceType
          required: true
          type: string
          enum:
            - BAND
        - name: serviceUuid
          in: path
          description: serviceUuid
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v1/person/change-email/{uuid}:
    patch:
      tags:
        - Person Controller
      summary: Update a person email
      operationId: changeEmailUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: changePersonEmailRequest
          description: changePersonEmailRequest
          required: true
          schema:
            $ref: '#/definitions/ChangePersonEmailRequest'
        - name: uuid
          in: path
          description: uuid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdatePersonResult'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /v1/person/change-password/{uuid}:
    patch:
      tags:
        - Person Controller
      summary: Change password
      operationId: changePasswordUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: changePasswordForm
          description: changePasswordForm
          required: true
          schema:
            $ref: '#/definitions/ChangePasswordForm'
        - name: uuid
          in: path
          description: uuid
          required: true
          type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /v1/person/cpf/{personCpf}:
    get:
      tags:
        - Person Controller
      summary: Find a person by it's CPF
      operationId: findByCpfUsingGET
      produces:
        - '*/*'
      parameters:
        - name: personCpf
          in: path
          description: personCpf
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PersonResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v1/person/owner/{serviceType}/{serviceUuid}:
    get:
      tags:
        - Person Controller
      summary: Check if the authenticated person is the owner of the given service
      operationId: checkIfPersonIsServiceOwnerUsingGET
      produces:
        - '*/*'
      parameters:
        - name: serviceType
          in: path
          description: serviceType
          required: true
          type: string
          enum:
            - BAND
        - name: serviceUuid
          in: path
          description: serviceUuid
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v1/person/token:
    post:
      tags:
        - Person Controller
      summary: Generate a person's JWT token
      operationId: generateTokenUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: personTokenForm
          description: personTokenForm
          required: true
          schema:
            $ref: '#/definitions/GenerateTokenRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GenerateTokenResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v1/person/uuid/{personUuid}:
    get:
      tags:
        - Person Controller
      summary: Find a person by it's uuid
      operationId: findByUuidUsingGET
      produces:
        - '*/*'
      parameters:
        - name: personUuid
          in: path
          description: personUuid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PersonResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v1/person/{uuid}:
    put:
      tags:
        - Person Controller
      summary: Update a person with the given data
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: updatePersonRequest
          description: updatePersonRequest
          required: true
          schema:
            $ref: '#/definitions/UpdatePersonRequest'
        - name: uuid
          in: path
          description: uuid
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  ChangePasswordForm:
    type: object
    properties:
      password:
        type: string
      passwordRepeated:
        type: string
    title: ChangePasswordForm
  ChangePersonEmailRequest:
    type: object
    properties:
      newEmail:
        type: string
    title: ChangePersonEmailRequest
  CreateEmailChangeRequestForm:
    type: object
    properties:
      uuid:
        type: string
    title: CreateEmailChangeRequestForm
  CreatePasswordChangeRequestForm:
    type: object
    properties:
      email:
        type: string
    title: CreatePasswordChangeRequestForm
  CreatePersonRequest:
    type: object
    properties:
      cpf:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      passwordRepeated:
        type: string
    title: CreatePersonRequest
  GenerateTokenRequest:
    type: object
    properties:
      password:
        type: string
      username:
        type: string
    title: GenerateTokenRequest
  GenerateTokenResponse:
    type: object
    properties:
      token:
        type: string
      type:
        type: string
    title: GenerateTokenResponse
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  PersonResponse:
    type: object
    properties:
      cpf:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      uuid:
        type: string
    title: PersonResponse
  PersonWithRolesResponse:
    type: object
    properties:
      cpf:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      roles:
        type: array
        items:
          $ref: '#/definitions/RolesResponse'
      uuid:
        type: string
    title: PersonWithRolesResponse
  RolesResponse:
    type: object
    properties:
      name:
        type: string
    title: RolesResponse
  UpdatePersonRequest:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
    title: UpdatePersonRequest
  UpdatePersonResult:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
    title: UpdatePersonResult
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
